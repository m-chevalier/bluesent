services:
  producer:
    depends_on:
      - kafka-init
    expose:
      - 8000
    build: producer/
    container_name: producer
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_OUTPUT_TOPIC: llm-posts
    restart: always

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"

  kafka:
      build: kafka/
      container_name: kafka
      ports:
        - "9092:9092"
      environment:
        # Kafka KRaft Config
        KAFKA_NODE_ID: 1
        KAFKA_PROCESS_ROLES: broker,controller
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_NUM_PARTITIONS: 1

  kafka-init:
    image: apache/kafka:3.7.0
    depends_on:
      - kafka
    entrypoint: [ "sh", "-c" ]
    command: >
      "
      echo 'Waiting for Kafka to be ready...' &&
      while ! nc -z kafka 9092; do sleep 1; done &&
      echo 'Kafka is up. Creating topics...' &&
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic llm-posts --replication-factor 1 --partitions 1 &&
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic llm-embeddings-enriched --replication-factor 1 --partitions 1
      "

  kafka-ui:
    depends_on:
      - kafka
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - AUTH_TYPE="LOGIN_FORM"
      - SPRING_SECURITY_USER_NAME=${KAFKA_UI_LOGIN}
      - SPRING_SECURITY_USER_PASSWORD=${KAFKA_UI_PASSWORD}